model Appointment {
    id        String  @id @default(uuid())
    patientId String
    patient   Patient @relation(fields: [patientId], references: [id])

    doctorId String
    doctor   Doctor @relation(fields: [doctorId], references: [id])

    scheduleId String
    schedule   Schedule @relation(fields: [scheduleId], references: [id])

    videoCallingId String
    status         AppointmentStatus @default(SCHEDULED)
    paymentStatus  PaymentStatus @default(UNPAID)
    createdAt      DateTime          @default(now())
    updatedAt      DateTime          @updatedAt
    Payment        Payment?
    Prescriptin    Prescriptin?

    @@map("appointments")
}

model Payment {
    id                 String        @id @default(uuid())
    appoinmentId       String        @unique
    appointment        Appointment   @relation(fields: [appoinmentId], references: [id])
    amount             Float
    transactionId      String        @unique
    status             PaymentStatus @default(UNPAID)
    paymentGatewayData Json?
    createdAt          DateTime      @default(now())
    updatedAt          DateTime      @updatedAt

    @@map("payments")
}

model Prescriptin {
    id           String      @id @default(uuid())
    appoinmentId String      @unique
    appointment  Appointment @relation(fields: [appoinmentId], references: [id])

    patientId String
    patient   Patient @relation(fields: [patientId], references: [id])

    doctorId     String
    doctor       Doctor   @relation(fields: [doctorId], references: [id])
    instructions String
    followUpDate DateTime
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
}
